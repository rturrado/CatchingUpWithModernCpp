export module PopenTest;

import <array>;
import <cstdio>;  // _popen, _pclose
import <iostream>;  // cout
import <memory>;  // unique_ptr
import <stdexcept>;  // runtime_error
import <string>;

std::string exec(const char* cmd)
{
    std::array<char, 128> buffer;
    std::string result;
    std::unique_ptr<FILE, decltype(&_pclose)> pipe(_popen(cmd, "r"), _pclose);
    if (!pipe)
    {
        throw std::runtime_error("_popen() failed!");
    }
    while (fgets(buffer.data(), buffer.size(), pipe.get()) != nullptr)
    {
        result += buffer.data();
    }
    return result;
}

export void popen_test_main()
{
    std::cout << exec(R"(dir C:\Windows\Temp\popen-test)") << "\n";
}
